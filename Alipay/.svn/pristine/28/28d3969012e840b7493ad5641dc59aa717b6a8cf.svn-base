package com.alipay.Imazamox.controller;
import com.alibaba.fastjson.JSONObject;
import com.alipay.Imazamox.domain.JingoImRecharge;
import com.alipay.api.*;
import com.alipay.api.request.*;
import com.alipay.utils.ContentUtil;
import com.alipay.utils.GeneratorUUID;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import com.alipay.Imazamox.service.RechargeService;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import sun.nio.cs.Surrogate;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static com.alipay.api.AlipayConstants.CHARSET;

/**
 * Created by zxj20 on 2017/8/17.
 */
@Controller
@RequestMapping(value = "/Recharge")
public class RechargeController {
    @Autowired
    private RechargeService rs;
    private AlipayClient client = ContentUtil.getClient();

    @RequestMapping(value = "/rh",method = RequestMethod.GET)
    public void Recharge ( double amount ,HttpServletRequest Request,HttpServletResponse Response) throws ServletException, IOException {
        AlipayTradePagePayRequest alipayRequest = new AlipayTradePagePayRequest();//创建API对应的request
        String RechargeCode = GeneratorUUID.generate();
        alipayRequest.setReturnUrl(ContentUtil.getReturnUrl() + "?imr_code=" + RechargeCode);
        alipayRequest.setNotifyUrl(ContentUtil.getNotifyUrl());//在公共参数中设置回跳和通知地址


        String ProductCode = "FAST_INSTANT_TRADE_PAY";
        double TotalAmount = amount;
        String subject = "11111";
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("out_trade_no",RechargeCode);
        jsonObject.put("product_code",ProductCode);
        jsonObject.put("total_amount",TotalAmount);
        jsonObject.put("subject",subject);
        alipayRequest.setBizContent(jsonObject.toJSONString());//填充业务参数
        String form="";
        try {
            form = client.pageExecute(alipayRequest).getBody(); //调用SDK生成表单
        } catch (Exception e) {
            e.printStackTrace();
        }

        Response.getWriter().write(form);//直接将完整的表单html输出到页面
        rs.insertsaveRecharge(amount,RechargeCode,subject);
        Response.getWriter().flush();
        Response.getWriter().close();
    }

    @RequestMapping(value = "/UpdateRechargeInfo" ,method = RequestMethod.GET)
    @ResponseBody
    public Map<String, Object> UpdateRechargeInfo(String imr_code){
        Map<String,Object>  map=new HashMap();
        JingoImRecharge jic=new JingoImRecharge();
        jic.setRecharge_code(imr_code);
        return rs.UpdateRechargeInfo(jic);
   }
}
